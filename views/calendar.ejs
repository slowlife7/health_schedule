<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      * {
        margin: 0;
        padding: 0;
      }
      body {
        font-family: "굴림", gulim, helvetica, "나눔바른고딕 옛한글",
          "NanumBarunGothic YetHangul", "새굴림", sans-serif;
        color: #000;
      }

      li {
        list-style: none;
      }
      a {
        text-decoration: none;
      }

      .pagination {
        font-size: 0.7em;
        text-align: center;
        margin-top: 5%;
        padding-bottom: 5%;
      }
      .pagination ul {
        display: inline-block;
        padding-left: 0;
        text-align: center;
      }
      .pagination ul li {
        display: inline;
        text-align: center;
      }
      .pagination ul li a {
        font-size: 1.2em;
        padding: 5px 12px;
        color: dimgray;
      }
      .pagination ul li a:hover {
        color: honeydew;
      }
      .hidden {
        display:none;
      }

      .circle {
        background-color: lightcoral;
        width: 10px;
        height: 10px;
        border-radius: 5px;
        margin: 2px;
        display:inline-block;
      }

    </style>
    <link rel="stylesheet" href="/css/setting.css" />
    <link rel="stylesheet" href="/css/calendar.css" />
    <link rel="stylesheet" href="/css/modal.css" />
    <link rel="stylesheet" href="/css/imgmenu.css" />
    <link rel="stylesheet" href="/css/record.css" />
    <link rel="stylesheet" href="/css/excercise.css" />
  </head>
  <body>
    <div class="calendar">
      <div class="calendar--nav">
        <div class="calendar--month">
          <div class="calendar--month__title"><%= title %></div>

          <div class="hidden"><%= start %>-<%= end %></div>
        </div>
      </div>

      <div class="calendar--content">
        <div class="calendar--week">
          <div class="calendar--week__title">
            <div class="calendar--week__text">일</div>
          </div>
          <div class="calendar--week__title">
            <div class="calendar--week__text">월</div>
          </div>
          <div class="calendar--week__title">
            <div class="calendar--week__text">화</div>
          </div>
          <div class="calendar--week__title">
            <div class="calendar--week__text">수</div>
          </div>
          <div class="calendar--week__title">
            <div class="calendar--week__text">목</div>
          </div>
          <div class="calendar--week__title">
            <div class="calendar--week__text">금</div>
          </div>
          <div class="calendar--week__title">
            <div class="calendar--week__text">토</div>
          </div>
        </div>

        <% for( let i = 0; i < days.length / 7; i++) { %>
        <div class="calendar--week">
          <% for ( let j = i * 7; j < (i +1) * 7; j++) { %>
          <div class="calendar--day">
            <div class="calendar--day__text"><%= days[j] %></div>
          </div>
          <% } %>
        </div>
        <% } %>
      </div>
    </div>

    <% include excercise %> <% include record %> <% include setting %> <%
    include menu-modal %>
  </body>

  <script src="/javascript/excercise.js"></script>
  <script>
    let navURL = "";
    let currentDate = "";
    let currentDay = "";
    function httpGetRequest(url, responseType, method, data) {
      return new Promise((resolve, reject) => {
        try {
          const xhr = new XMLHttpRequest();
          const mth = method || "GET";
          console.log("mth:", mth);
          xhr.open(mth, url);
          method === "POST" &&
            xhr.setRequestHeader("Content-Type", "application/json");
          console.log(url.split("?")[0]);
          xhr.responseType = responseType || "json";
          xhr.onerror = event => {
            reject(`Network error: ${event}`);
          };
          xhr.onload = () => {
            if (xhr.status === 200) {
              resolve({
                ...xhr.response,
                url: url.split("?")[0],
                query: navURL
              });
            } else {
              reject(`XHR load error: ${xhr.statusText}`);
            }
          };
          console.log(data);
          xhr.send(data);
        } catch (err) {
          reject(err.message);
        }
      });
    }

    const wrapContent = document.querySelector("tbody");
    const setPostContent = function(json) {
      return (
        '<tr> \
      <td><input type="checkbox"/></td> \
      <td>' +
        json.name +
        "</td> 		\
      <td>" +
        json.weight +
        "</td>		\
      <td><select><option>" +
        json.set +
        "</option></select></td>	\
      </tr>"
      );
    };

    const paintPosts = function(json) {
      console.log("paint posts");
      wrapContent.innerHTML = "";
      json.items.forEach(item => {
        wrapContent.insertAdjacentHTML("beforeend", createRow(item));
      });
    };

    const getPage = function(url) {
      console.log("url:", url);

      httpGetRequest(url)
        .then(result => {
          paintPosts(result);
          paintPagination(result);
          console.log(result.items);
        })
        .catch(err => {});
    };
    const getPageBox = function(url, arrow) {
      return (
        '<li> \
                <a href="javascript:void(0);" onclick=getPage("' +
        url +
        '");>' +
        arrow +
        "</a>\
              </li>"
      );
    };
    const paginationContent = document.querySelector(".pagination");
    const paintPagination = function(json) {
      console.dir(json);
      paginationContent.innerHTML = "";

      const ul = document.createElement("ul");
      paginationContent.appendChild(ul);

      json.prev &&
        ul.insertAdjacentHTML(
          "beforeend",
          getPageBox(json.url + "?pageNo=" + json.prev + "&" + json.query, "<<")
        );

      for (let i = json.first; i <= json.last; i++) {
        ul.insertAdjacentHTML(
          "beforeend",
          getPageBox(json.url + "?pageNo=" + i + "&" + json.query, i)
        );
      }

      json.next &&
        ul.insertAdjacentHTML(
          "beforeend",
          getPageBox(json.url + "?pageNo=" + json.next + "&" + json.query, ">>")
        );
    };

    const onclick = function(event) {
      if (event.target.nodeName !== "IMG") return false;

      const parent = event.target.parentElement;
      const pparent = parent.parentElement;
      let sendJson = {};
      for (let i = 0; i < pparent.children.length; i++) {
        const json = {};
        json[pparent.children[i].className] =
          pparent.children[i].firstElementChild.value;
        sendJson = { ...sendJson, ...json };
      }

      sendJson.reps = sendJson.reps.split("/").map(item => {
        return parseInt(item);
      });

      console.log();
      sendJson.conductedAt = `"${currentDate}.${currentDay}"`;
      console.log(sendJson);

      fetch("/records", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(sendJson)
      })
        .then(response => {
          return response.json();
        })
        .then(json => {
          console.log(json);

          const hidden = document.querySelector('.hidden').innerText;
          const indexs = hidden.split('-');
          const start = parseInt(indexs[0]);

          const calendarArr = document.querySelectorAll('.calendar--day__text');
          const date = new Date(json.conductedAt);
          const completed = (date.getDate() + start -1);
          const parent = calendarArr[completed].parentElement;
          const div = document.createElement('div');
          div.className = 'circle';
          parent.appendChild(div);

        });
    };

    const createRowRecord = function(json, fn) {
      const div = document.createElement("div");
      div.addEventListener("click", fn);
      const name = `<div class="name"><input type="text" placeholder="NAME" value=${json.name}>\
                    <img src="/assets/images/iconmonstr-tag-1-24.png"/></div>`;
      const weight = `<div class="weight"><input type="text" placeholder="WEIGHT" value=${json.weight}>\
                        <img src="/assets/images/iconmonstr-tag-1-24.png" alt="tag" /> \
                      </div>`;
      const reps = ` <div class="reps"> \
          <input type="text" placeholder="REPS"/ size="${json.set}" maxlength="${json.set}"> \
          <img src="/assets/images/iconfinder_158-Save_2123968.png" alt="add" /> \
        </div>`;

      div.insertAdjacentHTML("beforeend", name);
      div.insertAdjacentHTML("beforeend", weight);
      div.insertAdjacentHTML("beforeend", reps);
      return div;
    };

    document
      .querySelector(".calendar--content")
      .addEventListener("click", event => {
        currentDate = document.querySelector(".calendar--month__title")
          .innerText;
        currentDay = event.target.innerText;
        console.log(
          document.querySelector(".calendar--month__title").innerText +
            "." +
            event.target.innerText
        );
        //console.log(calendar--month__title);

        document.querySelector(".menu--modal .modal").style.display = "block";

        httpGetRequest("/excercises")
          .then(result => {
            paintPosts(result);
            paintPagination(result);
            console.log(result.items);
          })
          .catch(err => {});
      });

    document
      .querySelector(".menu--modal .modal--header > img")
      .addEventListener("click", function() {
        console.log("modal1");
        document.querySelector(".menu--modal .modal").style.display = "none";
      });

    document
      .querySelector(".setting--modal .modal--header > img")
      .addEventListener("click", function() {
        document.querySelector(".setting--modal .modal").style.display = "none";
      });

    document
      .querySelector(".excercise--modal .modal--header > img")
      .addEventListener("click", function() {
        document.querySelector(".excercise--modal .modal").style.display =
          "none";
     
    
      });

    document
      .querySelector(".record--modal .modal--header > img")
      .addEventListener("click", function() {
        document.querySelector(".record--modal .modal").style.display = "none";
      
      });

    const createRowView = function(json) {
      const div = document.createElement("div");
      div.className = "record--view";

      const name = `<div class="name"><input type="text" readonly placeholder="NAME" value=${json.name}>\
                    <img src="/assets/images/iconmonstr-tag-1-24.png"/></div>`;
      const weight = `<div class="weight"><input type="text" readonly placeholder="WEIGHT" value="${json.weight} KG">\
                        <img src="/assets/images/iconmonstr-tag-1-24.png" alt="tag" /> \
                      </div>`;
      const reps = ` <div class="reps"> \
          <input type="text" readonly placeholder="REPS" value=${json.reps}> \
          <img src="/assets/images/iconmonstr-tag-1-24.png" alt="add" /> \
        </div>`;

      div.insertAdjacentHTML("beforeend", name);
      div.insertAdjacentHTML("beforeend", weight);
      div.insertAdjacentHTML("beforeend", reps);
      return div;
    };

    document
      .querySelector(".record")
      .addEventListener("keydown", function(event) {
        const key = event.charCode || event.keyCode || 0;

        if (key !== 8 && key !== 9) {
          if (event.target.value.length >= event.target.maxLength - 1) return;

          if ((event.target.value.length + 1) % 3 === 0) {
            event.target.value += "/";
          }
        }

        return false;
      });

    document
      .querySelector(".menu--modal .modal--content")
      .addEventListener("click", function(event) {
        console.dir(event.target);

        const selected = event.target.classList[0];
        if (selected === "setting") {
          document.querySelector(".menu--modal .modal").style.display = "none";
          document.querySelector(".setting--modal .modal").style.display =
            "block";
        } else if (selected === "excercise") {
          document.querySelector(".menu--modal .modal").style.display = "none";
          document.querySelector(".excercise--modal .modal").style.display =
            "block";

          const start = currentDate + "." + currentDay;
          const end = currentDate + "." + (parseInt(currentDay) + 1);

          const url = `/records?start='${start}'&end='${end}'`;

          fetch(url)
            .then(response => response.json())
            .then(json => {
              console.log(json);
              document.querySelector(".excercise").innerHTML = "";
              json.forEach(item => {
                console.dir(item);
                const tag = createRowView({
                  name: item.excercises.name,
                  reps: item.excercises.reps.reduce(function(acc, cur, arr) {
                    acc = acc + "/" + cur;
                    console.log("acc:", acc);
                    return acc;
                  }),
                  weight: item.excercises.weight
                });

                document.querySelector(".excercise").appendChild(tag);
              });
            });
        } else if (selected === "record") {

          

          document.querySelector(".menu--modal .modal").style.display = "none";
          document.querySelector(".record--modal .modal").style.display =
            "block";

          fetch("/excercises/pick")
            .then(result => {
              return result.json();
            })
            .then(json => {
              document.querySelector(".modal--content .record").innerHTML = "";
              json.forEach(item => {
                const tag = createRowRecord(
                  {
                    name: item.name,
                    set: item.set * 2 + item.set - 1,
                    weight: item.weight
                  },
                  onclick
                );
                document
                  .querySelector(".modal--content .record")
                  .appendChild(tag);
              });
            })
            .catch(err => {});
        }
      });

      
      currentDate = document.querySelector(".calendar--month__title")
          .innerText;
          console.log(currentDate);
      const hidden = document.querySelector('.hidden').innerText;
      console.log('hi:',hidden);
        const indexs = hidden.split('-');
        const start = parseInt(indexs[0]);
        const end = parseInt(indexs[1]);
        console.log('aaaaaa');
       const calendarArr = document.querySelectorAll('.calendar--day__text');
        const startDay = currentDate+'.'+calendarArr[start].innerText;
        const endDay = currentDate+'.'+calendarArr[end].innerText;

        console.log('start:',startDay);
        console.log('end:',endDay);
        const url = `/records?start='${startDay}'&end='${endDay}'`;
     

        fetch(url)
        .then(response=>response.json())
        .then(json=>{
          json.forEach(item=>{
            const date = new Date(item.conductedAt);
            const completed = (date.getDate() + start -1);
            const parent = calendarArr[completed].parentElement;
            const div = document.createElement('div');
            div.className = 'circle';
            parent.appendChild(div);
          })
        })

  </script>
</html>
